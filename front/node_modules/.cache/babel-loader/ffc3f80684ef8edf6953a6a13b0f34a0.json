{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\n\nexport const getStyle = _ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'space-between',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = Number(theme.spacing(ownerState.defaultSpacing).replace('px', ''));\n\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n\n  const spacingStyleFromPropValue = propValue => {\n    const themeSpacingValue = Number(propValue);\n    const spacing = Number(getValue(transformer, themeSpacingValue).replace('px', ''));\n    return _extends({\n      margin: -(spacing / 2),\n      '& > *': {\n        margin: spacing / 2\n      }\n    }, ownerState.maxColumnHeight && {\n      height: Math.ceil(ownerState.maxColumnHeight + spacing)\n    });\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues !== 'object' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue)); // configure width for responsive spacing values\n\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n\n      return null;\n    }));\n  }\n\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    columns = 4,\n    spacing = 1,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom); // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      } // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n\n\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n\n    if (!skip) {\n      setMaxColumnHeight(Math.max(...columnHeights));\n      const numOfLineBreaks = currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0;\n      setNumberOfLineBreaks(numOfLineBreaks);\n    }\n  };\n\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current; // IE and old browsers are not supported\n\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n  const lineBreakStyle = {\n    flexBasis: '100%',\n    width: 0,\n    margin: 0,\n    padding: 0\n  }; //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/lab/Masonry/Masonry.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","unstable_composeClasses","composeClasses","styled","useThemeProps","createUnarySpacing","getValue","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","deepmerge","unstable_useForkRef","useForkRef","clsx","PropTypes","React","getMasonryUtilityClass","jsx","_jsx","jsxs","_jsxs","parseToNumber","val","Number","replace","useUtilityClasses","ownerState","classes","slots","root","getStyle","theme","styles","width","display","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","spacing","i","defaultColumns","order","height","defaultHeight","margin","toFixed","spacingValues","values","breakpoints","transformer","spacingStyleFromPropValue","propValue","themeSpacingValue","maxColumnHeight","Math","ceil","columnValues","columns","columnStyleFromPropValue","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","MasonryRoot","name","slot","overridesResolver","props","Masonry","forwardRef","inProps","ref","children","className","component","other","masonryRef","useRef","setMaxColumnHeight","useState","undefined","numberOfLineBreaks","setNumberOfLineBreaks","handleResize","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","max","numOfLineBreaks","observer","ResizeObserver","useEffect","resizeObserver","childNode","observe","disconnect","handleRef","lineBreakStyle","flexBasis","padding","lineBreaks","map","_","index","as","process","env","NODE_ENV","propTypes","node","isRequired","object","string","oneOfType","arrayOf","number","elementType","sx","func","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\n\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'space-between',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = Number(theme.spacing(ownerState.defaultSpacing).replace('px', ''));\n\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n\n  const spacingStyleFromPropValue = propValue => {\n    const themeSpacingValue = Number(propValue);\n    const spacing = Number(getValue(transformer, themeSpacingValue).replace('px', ''));\n    return _extends({\n      margin: -(spacing / 2),\n      '& > *': {\n        margin: spacing / 2\n      }\n    }, ownerState.maxColumnHeight && {\n      height: Math.ceil(ownerState.maxColumnHeight + spacing)\n    });\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues !== 'object' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue)); // configure width for responsive spacing values\n\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n\n      return null;\n    }));\n  }\n\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    columns = 4,\n    spacing = 1,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom); // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      } // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n\n\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n\n    if (!skip) {\n      setMaxColumnHeight(Math.max(...columnHeights));\n      const numOfLineBreaks = currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0;\n      setNumberOfLineBreaks(numOfLineBreaks);\n    }\n  };\n\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current; // IE and old browsers are not supported\n\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n  const lineBreakStyle = {\n    flexBasis: '100%',\n    width: 0,\n    margin: 0,\n    padding: 0\n  }; //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"]},"metadata":{},"sourceType":"module"}