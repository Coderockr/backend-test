openapi: 3.0.3

info:
  title: Coderockr Backend Test - OpenAPI 3.0
  description: |-
    A submission for Coderockr's backend development test.
    <br>
    <br>
    An investment managment application exposed through a REST API that deals with 3 entities:
    <br>
    - Investors
    <br>
    - Investments
    <br>
    - Withdrawals

  version: 1.0.0

servers:
  - url: http://localhost:8080/api

tags:
  - name: investors
  - name: investments
  - name: withdrawals

paths:
  /investors:
    post:
      tags:
        - investors
      summary: Add a new investor
      operationId: createInvestor
      requestBody:
        description: Create a new investor
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Investor"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Investor"
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /investors/{cpf}:
    get:
      tags:
        - investors
      summary: Find investor by CPF
      description: Returns a single investor based on their CPF
      operationId: findInvestorByCpf
      parameters:
        - name: cpf
          in: path
          description: CPF of the investor to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Investor"
        "400":
          description: Bad request
        "404":
          description: Investor not found
        "500":
          description: Internal server error

  /investments:
    post:
      tags:
        - investments
      summary: Create a new investment
      operationId: createInvestment
      requestBody:
        description: Create a new investment
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewInvestment"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Investment"
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /investments/{id}:
    get:
      tags:
        - investments
      summary: Find investment by ID
      description: Returns a single investment based on its ID
      operationId: findInvestmentById
      parameters:
        - name: id
          in: path
          description: ID of the investment to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Investment"
        "400":
          description: Bad request
        "404":
          description: Investor not found
        "500":
          description: Internal server error

  /withdrawals:
    post:
      tags:
        - withdrawals
      summary: Add a new withdrawal
      operationId: addWithdrawal
      requestBody:
        description: Create a new withdrawal
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewWithdrawal"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Withdrawal"
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /withdrawals/{id}:
    get:
      tags:
        - withdrawals
      summary: Find withdrawal by ID
      description: Returns a single withdrawal based on its ID
      operationId: findWithdrawalById
      parameters:
        - name: id
          in: path
          description: ID of the withdrawal to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Withdrawal"
        "400":
          description: Bad request
        "404":
          description: Investor not found
        "500":
          description: Internal server error

components:
  schemas:
    Investor:
      properties:
        cpf:
          type: string
          example: 95130357000
        name:
          type: string
          example: Lazlo Varga

    Investment:
      allOf:
        - $ref: "#/components/schemas/BaseInvestment"
        - required:
            - id
            - balance
            - investor
          properties:
            id:
              type: integer
              example: 1
              description: Investment ID
            balance:
              type: integer
              example: 1000000
              description: Sum of the initial amount and the gains of the investment, represented in the smallest unit of the respective monetary system
            investor:
              $ref: "#/components/schemas/Investor"

    NewInvestment:
      allOf:
        - $ref: "#/components/schemas/BaseInvestment"
        - required:
            - investor_cpf
          properties:
            investor_cpf:
              type: string
              description: CPF of the investor

    BaseInvestment:
      required:
        - initialAmount
        - creationDate
      properties:
        initial_amount:
          type: integer
          example: 1000000
          description: Amount of money that was invested initially, represented in the smallest unit of the respective monetary system
        creation_date:
          type: string
          format: date
          example: 2025-01-01
          description: Date of creation of the investment

    Withdrawal:
      allOf:
        - $ref: "#/components/schemas/NewWithdrawal"
        - required:
            - id
            - gross_amount
            - net_amount
          properties:
            id:
              type: integer
              example: 1
              description: Withdrawal ID
            gross_amount:
              type: integer
              example: 1000000
              description: The investment balance at the moment the withdrawal was made, represented in the smallest unit of the respective monetary system
            net_amount:
              type: integer
              example: 1000000
              description: The investment balance minus appliable taxes, represented in the smallest unit of the respective monetary system

    NewWithdrawal:
      required:
        - date
        - investment_id
      properties:
        date:
          type: string
          format: date
          example: 2025-01-01
          description: Date of creation of the withdrawal

  requestBodies:
    Investor:
      description: Investor object that needs to be created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Investor"

    NewInvestment:
      description: Investment object that needs to be created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Investment"

    NewWithdrawal:
      description: Withdrawal object that needs to be created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Withdrawal"
