openapi: 3.0.3
info:
  title: Event social network
  version: v1.0.0
  description: Documentation of event social network API
  contact:
    url: https://linkedin.com/in/devguerreiro
    email: devcorujam@gmail.com
paths:
  /api/v1/:
    get:
      operationId: root_list
      description: list all events
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: place
        schema:
          type: string
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListEventList'
          description: ''
    post:
      operationId: root_create
      description: create an event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/{id}/:
    get:
      operationId: root_retrieve
      description: retrieve an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailEvent'
          description: ''
    put:
      operationId: root_update
      description: update an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
    patch:
      operationId: root_partial_update
      description: update an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateEvent'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
    delete:
      operationId: root_destroy
      description: delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/{id}/add_participant/{user_id}/:
    post:
      operationId: add_participant_create
      description: add participant to an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - add_participant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/{id}/remove_participant/{user_id}/:
    post:
      operationId: remove_participant_create
      description: remove participant from an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - remove_participant
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/invitation/:
    post:
      operationId: invitation_create
      description: create an invitation and send email when created
      tags:
      - invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvitation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/invitation/{id}/:
    put:
      operationId: invitation_update
      description: update an invitation and send email when updated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvitation'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
    patch:
      operationId: invitation_partial_update
      description: update an invitation and send email when updated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateInvitation'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
    delete:
      operationId: invitation_destroy
      description: delete an invitation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - invitation
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/user/{id}/remove_friend/:
    delete:
      operationId: user_remove_friend_destroy
      description: remove an friendship
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/user/account_activation/{uid}/{token}/:
    get:
      operationId: user_account_activation_retrieve
      description: active an user account
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request'
          description: ''
  /api/v1/user/event_invitations/:
    get:
      operationId: user_event_invitations_retrieve
      description: return all invitations of type EV (Event)
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitation'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/user/friends/:
    get:
      operationId: user_friends_retrieve
      description: return all friends
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUser'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/user/friendship_invitations/:
    get:
      operationId: user_friendship_invitations_retrieve
      description: return all invitations of type FS (Friendship)
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitation'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/user/my_events/:
    get:
      operationId: user_my_events_retrieve
      description: return all events that user is owner or participate
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvent'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /api/v1/user/rejected_events/:
    get:
      operationId: user_rejected_events_retrieve
      description: return all events that user rejected
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitation'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbbiden_request'
          description: ''
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      description: ''
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      description: ''
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      description: ''
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    CreateEvent:
      type: object
      description: |-
        Serializer to create an event

        Has the following fields:

            - name

            - description

            - date

            - time

            - place
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
          maxLength: 150
      required:
      - date
      - description
      - name
      - place
      - time
    CreateInvitation:
      type: object
      description: |-
        Serializer to create an invitation

        Has the following fields:

            - type

            - event

            - invitation_to
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          description: EV = Event Invitation | FS = Frienship Invitation
        event:
          type: integer
          nullable: true
        invitation_to:
          type: array
          items:
            type: string
          description: Email list
      required:
      - invitation_to
      - type
    DetailEvent:
      type: object
      description: |-
        Serializer to detail an event

        Has the following fields:
            - id

            - name

            - description

            - date

            - time

            - place

            - owner

            - is_active

            - participants
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
          maxLength: 150
        owner_id:
          type: integer
        is_active:
          type: boolean
        participants_id:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - date
      - description
      - id
      - name
      - owner_id
      - participants_id
      - place
      - time
    ListEvent:
      type: object
      description: |-
        Serializer to list events

        Has the following fields:
            - id

            - name
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    ListInvitation:
      type: object
      description: |-
        Serializer to list invitations

        Has the following fields:
            - id

            - type

            - status

            - invitation_from

            - created_at
      properties:
        id:
          type: integer
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          description: EV = Event Invitation | FS = Frienship Invitation
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            AC = Accepted | RE = Rejected | PE = Pending

            Default is PE
        invitation_from:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - invitation_from
      - type
    ListUser:
      type: object
      description: |-
        Serializer to list users

        Has the following fields:
            - id

            - first_name

            - last_name

            - email
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
    PaginatedListEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListEvent'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedUpdateEvent:
      type: object
      description: |-
        Serializer to update an event

        Has the following fields:
            - name

            - description

            - date

            - time

            - place

            - owner

            - is_active
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
          maxLength: 150
        owner:
          type: integer
        is_active:
          type: boolean
    PatchedUpdateInvitation:
      type: object
      description: |-
        Serializer to update an invitation

        Has the following fields:
            - status
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            AC = Accepted | RE = Rejected | PE = Pending

            Default is PE
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - current_password
      - new_email
    StatusEnum:
      enum:
      - AC
      - RE
      - PE
      type: string
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    TypeEnum:
      enum:
      - EV
      - FS
      type: string
    UpdateEvent:
      type: object
      description: |-
        Serializer to update an event

        Has the following fields:
            - name

            - description

            - date

            - time

            - place

            - owner

            - is_active
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
          maxLength: 150
        owner:
          type: integer
        is_active:
          type: boolean
      required:
      - date
      - description
      - name
      - owner
      - place
      - time
    UpdateInvitation:
      type: object
      description: |-
        Serializer to update an invitation

        Has the following fields:
            - status
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            AC = Accepted | RE = Rejected | PE = Pending

            Default is PE
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - city
      - email
      - id
      - state
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - city
      - email
      - id
      - password
      - state
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - new_email
    bad_request:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    forbbiden_request:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
