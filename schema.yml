openapi: 3.0.3
info:
  title: Test Back End - Coderockr
  version: 1.0.0
  description: 'Coderockr Backend recruitment test '
paths:
  /api/accounts/:
    get:
      operationId: api_accounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/accounts/{id}/:
    get:
      operationId: api_accounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: api_accounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: api_accounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    delete:
      operationId: api_accounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/investment/{investment_id}/:
    get:
      operationId: api_investment_retrieve
      parameters:
      - in: path
        name: investment_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentDetail'
          description: ''
    delete:
      operationId: api_investment_destroy
      parameters:
      - in: path
        name: investment_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/investment/{investment_id}/withdrawn/:
    post:
      operationId: api_investment_withdrawn_create
      parameters:
      - in: path
        name: investment_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentWithdrawnDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestmentWithdrawnDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestmentWithdrawnDetail'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentWithdrawnDetail'
          description: ''
  /api/investments/:
    get:
      operationId: api_investments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestmentList'
          description: ''
  /api/investments/{owner_id}/:
    post:
      operationId: api_investments_create
      parameters:
      - in: path
        name: owner_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestmentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestmentDetail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentDetail'
          description: ''
components:
  schemas:
    Investment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
        gains:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        owner_id:
          type: string
          format: uuid
          readOnly: true
        isActive:
          type: boolean
          readOnly: true
        initial_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        withdrawn_date:
          type: string
          format: date
          readOnly: true
          nullable: true
      required:
      - amount
      - created_at
      - gains
      - id
      - initial_amount
      - isActive
      - owner_id
      - withdrawn_date
    InvestmentDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
        gains:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          readOnly: true
        expected_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        initial_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
      required:
      - amount
      - created_at
      - expected_balance
      - gains
      - id
      - initial_amount
      - owner
    InvestmentWithdrawnDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date
          readOnly: true
        gains:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        owner:
          type: string
          format: uuid
          readOnly: true
        expected_balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        initial_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        withdrawn_date:
          type: string
          format: date
          nullable: true
        withdrew_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
      required:
      - amount
      - created_at
      - expected_balance
      - gains
      - id
      - initial_amount
      - owner
      - withdrew_amount
    PaginatedInvestmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedUserDetail:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          maxLength: 127
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          maxLength: 127
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - email
      - id
      - username
    UserDetail:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          maxLength: 127
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
      required:
      - email
      - investments
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
