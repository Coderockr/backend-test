{"ast":null,"code":"/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js"],"names":["getTimezoneOffsetInMilliseconds","date","utcDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getTime"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,+BAAT,CAAyCC,IAAzC,EAA+C;AAC5D,MAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASH,IAAI,CAACI,WAAL,EAAT,EAA6BJ,IAAI,CAACK,QAAL,EAA7B,EAA8CL,IAAI,CAACM,OAAL,EAA9C,EAA8DN,IAAI,CAACO,QAAL,EAA9D,EAA+EP,IAAI,CAACQ,UAAL,EAA/E,EAAkGR,IAAI,CAACS,UAAL,EAAlG,EAAqHT,IAAI,CAACU,eAAL,EAArH,CAAT,CAAd;AACAT,EAAAA,OAAO,CAACU,cAAR,CAAuBX,IAAI,CAACI,WAAL,EAAvB;AACA,SAAOJ,IAAI,CAACY,OAAL,KAAiBX,OAAO,CAACW,OAAR,EAAxB;AACD","sourcesContent":["/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}"]},"metadata":{},"sourceType":"module"}