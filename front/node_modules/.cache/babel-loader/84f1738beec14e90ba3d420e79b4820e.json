{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DateRangePickerViewDesktopRoot = styled('div')({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '&:not(:last-of-type)': {\n      borderRight: `2px solid ${theme.palette.divider}`\n    }\n  };\n});\nconst DateRangePickerViewDesktopCalendar = styled(PickersCalendar)({\n  minWidth: 312,\n  minHeight: 288\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/lab/DateRangePicker/DateRangePickerViewDesktop.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","styled","useDefaultDates","useUtils","calculateRangePreview","PickersCalendar","DateRangePickerDay","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","isWithinRange","isStartOfRange","isEndOfRange","doNothing","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","DateRangePickerViewDesktopRoot","display","flexDirection","DateRangePickerViewDesktopContainer","theme","borderRight","palette","divider","DateRangePickerViewDesktopCalendar","minWidth","minHeight","DateRangePickerViewDesktopArrowSwitcher","padding","alignItems","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","props","changeMonth","components","componentsProps","currentlySelectingRangeEnd","currentMonth","date","disableFuture","disablePast","leftArrowButtonText","maxDate","maxDateProp","minDate","minDateProp","onChange","renderDay","_","dateRangeProps","rightArrowButtonText","other","utils","defaultDates","rangePreviewDay","setRangePreviewDay","useState","isNextMonthDisabled","isPreviousMonthDisabled","previewingRange","range","newDate","handleDayChange","useCallback","day","handlePreviewDayChange","newPreviewRequest","CalendarTransitionProps","useMemo","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","children","map","index","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","key","onFocusedDayChange","TransitionProps","__","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isStartOfHighlighting","isEndOfHighlighting","onMouseEnter"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DateRangePickerViewDesktopRoot = styled('div')({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div')(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `2px solid ${theme.palette.divider}`\n  }\n}));\nconst DateRangePickerViewDesktopCalendar = styled(PickersCalendar)({\n  minWidth: 312,\n  minHeight: 288\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;"]},"metadata":{},"sourceType":"module"}