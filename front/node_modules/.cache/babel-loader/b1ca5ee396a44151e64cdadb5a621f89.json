{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getRootProps\"];\nimport { useTabContext, getTabId, getPanelId } from '../TabsUnstyled';\nimport { useButton } from '../ButtonUnstyled';\n\nconst useTab = props => {\n  const {\n    value: valueProp,\n    onChange,\n    onClick,\n    onFocus\n  } = props;\n\n  const _useButton = useButton(props),\n        {\n    getRootProps: getRootPropsButton\n  } = _useButton,\n        otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  const value = valueProp != null ? valueProp : 0;\n  const selected = context.value === value;\n  const selectionFollowsFocus = context.selectionFollowsFocus;\n  const a11yAttributes = {\n    role: 'tab',\n    'aria-controls': getPanelId(context, value),\n    id: getTabId(context, value),\n    'aria-selected': selected,\n    disabled: otherButtonProps.disabled\n  };\n\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleClick = event => {\n    if (!selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const getRootProps = otherHandlers => {\n    const buttonResolvedProps = getRootPropsButton(_extends({\n      onClick: handleClick,\n      onFocus: handleFocus\n    }, otherHandlers));\n    return _extends({}, buttonResolvedProps, a11yAttributes);\n  };\n\n  return _extends({\n    getRootProps\n  }, otherButtonProps, {\n    selected\n  });\n};\n\nexport default useTab;","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/base/TabUnstyled/useTab.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","useTabContext","getTabId","getPanelId","useButton","useTab","props","value","valueProp","onChange","onClick","onFocus","_useButton","getRootProps","getRootPropsButton","otherButtonProps","context","Error","selected","selectionFollowsFocus","a11yAttributes","role","id","disabled","handleFocus","event","onSelected","handleClick","otherHandlers","buttonResolvedProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,cAAD,CAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,iBAApD;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AACJC,IAAAA,KAAK,EAAEC,SADH;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFL,KALJ;;AAOA,QAAMM,UAAU,GAAGR,SAAS,CAACE,KAAD,CAA5B;AAAA,QACM;AACJO,IAAAA,YAAY,EAAEC;AADV,MAEFF,UAHJ;AAAA,QAIMG,gBAAgB,GAAGhB,6BAA6B,CAACa,UAAD,EAAaZ,SAAb,CAJtD;;AAMA,QAAMgB,OAAO,GAAGf,aAAa,EAA7B;;AAEA,MAAIe,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,QAAMV,KAAK,GAAGC,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgC,CAA9C;AACA,QAAMU,QAAQ,GAAGF,OAAO,CAACT,KAAR,KAAkBA,KAAnC;AACA,QAAMY,qBAAqB,GAAGH,OAAO,CAACG,qBAAtC;AACA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,KADe;AAErB,qBAAiBlB,UAAU,CAACa,OAAD,EAAUT,KAAV,CAFN;AAGrBe,IAAAA,EAAE,EAAEpB,QAAQ,CAACc,OAAD,EAAUT,KAAV,CAHS;AAIrB,qBAAiBW,QAJI;AAKrBK,IAAAA,QAAQ,EAAER,gBAAgB,CAACQ;AALN,GAAvB;;AAQA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAIN,qBAAqB,IAAI,CAACD,QAA9B,EAAwC;AACtC,UAAIT,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACgB,KAAD,EAAQlB,KAAR,CAAR;AACD;;AAEDS,MAAAA,OAAO,CAACU,UAAR,CAAmBD,KAAnB,EAA0BlB,KAA1B;AACD;;AAED,QAAII,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACc,KAAD,CAAP;AACD;AACF,GAZD;;AAcA,QAAME,WAAW,GAAGF,KAAK,IAAI;AAC3B,QAAI,CAACP,QAAL,EAAe;AACb,UAAIT,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACgB,KAAD,EAAQlB,KAAR,CAAR;AACD;;AAEDS,MAAAA,OAAO,CAACU,UAAR,CAAmBD,KAAnB,EAA0BlB,KAA1B;AACD;;AAED,QAAIG,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACe,KAAD,CAAP;AACD;AACF,GAZD;;AAcA,QAAMZ,YAAY,GAAGe,aAAa,IAAI;AACpC,UAAMC,mBAAmB,GAAGf,kBAAkB,CAAChB,QAAQ,CAAC;AACtDY,MAAAA,OAAO,EAAEiB,WAD6C;AAEtDhB,MAAAA,OAAO,EAAEa;AAF6C,KAAD,EAGpDI,aAHoD,CAAT,CAA9C;AAIA,WAAO9B,QAAQ,CAAC,EAAD,EAAK+B,mBAAL,EAA0BT,cAA1B,CAAf;AACD,GAND;;AAQA,SAAOtB,QAAQ,CAAC;AACde,IAAAA;AADc,GAAD,EAEZE,gBAFY,EAEM;AACnBG,IAAAA;AADmB,GAFN,CAAf;AAKD,CAxED;;AA0EA,eAAeb,MAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getRootProps\"];\nimport { useTabContext, getTabId, getPanelId } from '../TabsUnstyled';\nimport { useButton } from '../ButtonUnstyled';\n\nconst useTab = props => {\n  const {\n    value: valueProp,\n    onChange,\n    onClick,\n    onFocus\n  } = props;\n\n  const _useButton = useButton(props),\n        {\n    getRootProps: getRootPropsButton\n  } = _useButton,\n        otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  const value = valueProp != null ? valueProp : 0;\n  const selected = context.value === value;\n  const selectionFollowsFocus = context.selectionFollowsFocus;\n  const a11yAttributes = {\n    role: 'tab',\n    'aria-controls': getPanelId(context, value),\n    id: getTabId(context, value),\n    'aria-selected': selected,\n    disabled: otherButtonProps.disabled\n  };\n\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const handleClick = event => {\n    if (!selected) {\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      context.onSelected(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const getRootProps = otherHandlers => {\n    const buttonResolvedProps = getRootPropsButton(_extends({\n      onClick: handleClick,\n      onFocus: handleFocus\n    }, otherHandlers));\n    return _extends({}, buttonResolvedProps, a11yAttributes);\n  };\n\n  return _extends({\n    getRootProps\n  }, otherButtonProps, {\n    selected\n  });\n};\n\nexport default useTab;"]},"metadata":{},"sourceType":"module"}