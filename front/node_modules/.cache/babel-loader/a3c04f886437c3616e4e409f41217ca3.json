{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"classes\", \"className\", \"label\", \"notched\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend')(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({\n    float: 'unset'\n  }, !ownerState.withLabel && {\n    padding: 0,\n    lineHeight: '11px',\n    // sync with `height` in `legend` styles\n    transition: theme.transitions.create('width', {\n      duration: 150,\n      easing: theme.transitions.easing.easeOut\n    })\n  }, ownerState.withLabel && _extends({\n    display: 'block',\n    // Fix conflict with normalize.css and sanitize.css\n    width: 'auto',\n    // Fix conflict with bootstrap\n    padding: 0,\n    height: 11,\n    // sync with `lineHeight` in `legend` styles\n    fontSize: '0.75em',\n    visibility: 'hidden',\n    maxWidth: 0.01,\n    transition: theme.transitions.create('max-width', {\n      duration: 50,\n      easing: theme.transitions.easing.easeOut\n    }),\n    whiteSpace: 'nowrap',\n    '& > span': {\n      paddingLeft: 5,\n      paddingRight: 5,\n      display: 'inline-block'\n    }\n  }, ownerState.notched && {\n    maxWidth: '100%',\n    transition: theme.transitions.create('max-width', {\n      duration: 100,\n      easing: theme.transitions.easing.easeOut,\n      delay: 50\n    })\n  }));\n});\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    notched\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const withLabel = label != null && label !== '';\n\n  const ownerState = _extends({}, props, {\n    notched,\n    withLabel\n  });\n\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: withLabel ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) : // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/material/OutlinedInput/NotchedOutline.js"],"names":["_objectWithoutPropertiesLoose","_extends","_span","_excluded","React","PropTypes","styled","jsx","_jsx","NotchedOutlineRoot","textAlign","position","bottom","right","top","left","margin","padding","pointerEvents","borderRadius","borderStyle","borderWidth","overflow","minWidth","NotchedOutlineLegend","ownerState","theme","float","withLabel","lineHeight","transition","transitions","create","duration","easing","easeOut","display","width","height","fontSize","visibility","maxWidth","whiteSpace","paddingLeft","paddingRight","notched","delay","NotchedOutline","props","className","label","other","children","process","env","NODE_ENV","propTypes","node","classes","object","string","bool","isRequired","style"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"classes\", \"className\", \"label\", \"notched\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend')(({\n  ownerState,\n  theme\n}) => _extends({\n  float: 'unset'\n}, !ownerState.withLabel && {\n  padding: 0,\n  lineHeight: '11px',\n  // sync with `height` in `legend` styles\n  transition: theme.transitions.create('width', {\n    duration: 150,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.withLabel && _extends({\n  display: 'block',\n  // Fix conflict with normalize.css and sanitize.css\n  width: 'auto',\n  // Fix conflict with bootstrap\n  padding: 0,\n  height: 11,\n  // sync with `lineHeight` in `legend` styles\n  fontSize: '0.75em',\n  visibility: 'hidden',\n  maxWidth: 0.01,\n  transition: theme.transitions.create('max-width', {\n    duration: 50,\n    easing: theme.transitions.easing.easeOut\n  }),\n  whiteSpace: 'nowrap',\n  '& > span': {\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'inline-block'\n  }\n}, ownerState.notched && {\n  maxWidth: '100%',\n  transition: theme.transitions.create('max-width', {\n    duration: 100,\n    easing: theme.transitions.easing.easeOut,\n    delay: 50\n  })\n})));\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    notched\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const withLabel = label != null && label !== '';\n\n  const ownerState = _extends({}, props, {\n    notched,\n    withLabel\n  });\n\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: withLabel ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) : // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;"]},"metadata":{},"sourceType":"module"}