{"ast":null,"code":"export function calculateRangeChange(_ref) {\n  let {\n    utils,\n    range,\n    newDate: selectedDate,\n    currentlySelectingRangeEnd\n  } = _ref;\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/lab/DateRangePicker/date-range-manager.js"],"names":["calculateRangeChange","utils","range","newDate","selectedDate","currentlySelectingRangeEnd","start","end","Boolean","isAfter","nextSelection","newRange","isBefore","calculateRangePreview","options","previewStart","previewEnd"],"mappings":"AAAA,OAAO,SAASA,oBAAT,OAKJ;AAAA,MALkC;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA,KAFmC;AAGnCC,IAAAA,OAAO,EAAEC,YAH0B;AAInCC,IAAAA;AAJmC,GAKlC;AACD,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAeL,KAArB;;AAEA,MAAIG,0BAA0B,KAAK,OAAnC,EAA4C;AAC1C,WAAOG,OAAO,CAACD,GAAD,CAAP,IAAgBN,KAAK,CAACQ,OAAN,CAAcL,YAAd,EAA4BG,GAA5B,CAAhB,GAAmD;AACxDG,MAAAA,aAAa,EAAE,KADyC;AAExDC,MAAAA,QAAQ,EAAE,CAACP,YAAD,EAAe,IAAf;AAF8C,KAAnD,GAGH;AACFM,MAAAA,aAAa,EAAE,KADb;AAEFC,MAAAA,QAAQ,EAAE,CAACP,YAAD,EAAeG,GAAf;AAFR,KAHJ;AAOD;;AAED,SAAOC,OAAO,CAACF,KAAD,CAAP,IAAkBL,KAAK,CAACW,QAAN,CAAeR,YAAf,EAA6BE,KAA7B,CAAlB,GAAwD;AAC7DI,IAAAA,aAAa,EAAE,KAD8C;AAE7DC,IAAAA,QAAQ,EAAE,CAACP,YAAD,EAAe,IAAf;AAFmD,GAAxD,GAGH;AACFM,IAAAA,aAAa,EAAE,OADb;AAEFC,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQF,YAAR;AAFR,GAHJ;AAOD;AACD,OAAO,SAASS,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,MAAI,CAACA,OAAO,CAACX,OAAb,EAAsB;AACpB,WAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD;;AAED,QAAM,CAACG,KAAD,EAAQC,GAAR,IAAeO,OAAO,CAACZ,KAA7B;AACA,QAAM;AACJS,IAAAA;AADI,MAEFX,oBAAoB,CAACc,OAAD,CAFxB;;AAIA,MAAI,CAACR,KAAD,IAAU,CAACC,GAAf,EAAoB;AAClB,WAAOI,QAAP;AACD;;AAED,QAAM,CAACI,YAAD,EAAeC,UAAf,IAA6BL,QAAnC;AACA,SAAOG,OAAO,CAACT,0BAAR,KAAuC,KAAvC,GAA+C,CAACE,GAAD,EAAMS,UAAN,CAA/C,GAAmE,CAACD,YAAD,EAAeT,KAAf,CAA1E;AACD","sourcesContent":["export function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd\n}) {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}"]},"metadata":{},"sourceType":"module"}