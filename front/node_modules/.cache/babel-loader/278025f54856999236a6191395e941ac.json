{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    let skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"sources":["/Users/juancarlossilva/Documents/apps/backend-test/front/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementTypeAcceptingRef","refType","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","ButtonBaseRoot","name","slot","overridesResolver","props","styles","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","setFocusVisible","useState","useImperativeHandle","current","focus","useEffect","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","undefined","role","handleOwnRef","handleRef","mountedState","setMountedState","enableTouchRipple","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","arrayOf","number","shape","isRequired","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"]},"metadata":{},"sourceType":"module"}